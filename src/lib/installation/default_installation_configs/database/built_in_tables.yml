table:
  - CREATE TABLE IF NOT EXISTS `users` (
    `uid` INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(255) NOT NULL,
    `mail` VARCHAR(255) NOT NULL,
    `status` BOOLEAN DEFAULT 0,
    `password` VARCHAR(255) NOT NULL,
    `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `login` TIMESTAMP NULL DEFAULT NULL
    )
  - CREATE TABLE IF NOT EXISTS `user_roles` (
    `rid` INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(255) NOT NULL,
    `role_name` VARCHAR(255) NOT NULL,
    `role_label` VARCHAR(255) NOT NULL,
    `uid` INT NOT NULL,
    CONSTRAINT `fk_user_roles_uid` FOREIGN KEY (`uid`) REFERENCES `users` (`uid`) ON DELETE CASCADE
    )
  - CREATE TABLE IF NOT EXISTS `user_profile` (
    `pid` INT PRIMARY KEY AUTO_INCREMENT,
    `first_name` VARCHAR(255) NULL,
    `last_name` VARCHAR(255) NULL,
    `profile_image` INT NULL,
    `uid` INT NOT NULL,
    `description` TEXT NULL,
    `time_zone` VARCHAR(255) NULL,
    `translation` INT NULL,
    `translation_code` VARCHAR(255) NULL,
    CONSTRAINT `fk_user_profile_uid` FOREIGN KEY (`uid`) REFERENCES `users` (`uid`) ON DELETE CASCADE
    )
  - CREATE TABLE IF NOT EXISTS `file_managed` (
    `fid` INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(255) NULL,
    `uri` VARCHAR(500) NULL,
    `size` INT NULL,
    `uid` INT NOT NULL,
    `mime_type` VARCHAR(255) NULL,
    `extension` VARCHAR(10) NULL,
    `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT `fk_file_managed_uid` FOREIGN KEY (`uid`) REFERENCES `users` (`uid`) ON DELETE CASCADE
    )
  - CREATE TABLE IF NOT EXISTS `node_data` (
    `nid` INT PRIMARY KEY AUTO_INCREMENT,
    `title` VARCHAR(255) NULL,
    `lang` VARCHAR(500) NULL,
    `bundle` VARCHAR(500) NULL,
    `status` INT NULL,
    `uid` INT NOT NULL,
    `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT `fk_node_uid` FOREIGN KEY (`uid`) REFERENCES `users` (`uid`) ON DELETE CASCADE
    )
  - CREATE TABLE IF NOT EXISTS activity (
    id INT AUTO_INCREMENT PRIMARY KEY,
    start INT,
    elapsed INT,
    end INT,
    memory INT,
    system_usage INT,
    user_usage INT,
    user INT,
    path VARCHAR(255),
    created TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    )
  - CREATE TABLE IF NOT EXISTS database_activity (
    id INT AUTO_INCREMENT PRIMARY KEY,
    query_line TEXT,
    executed_time float,
    path VARCHAR(255),
    created TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    )
  - CREATE TABLE IF NOT EXISTS verify_email_token (
    `id` INT AUTO_INCREMENT PRIMARY KEY,
    `token` VARCHAR(300),
    `uid` INT,
    `verified` INT NULL,
    `created` TIMESTAMP DEFAULT CURRENT_TIMESTAMP, 
    CONSTRAINT `fk_verify_email_token_uid` FOREIGN KEY (`uid`) REFERENCES `users` (`uid`) ON DELETE CASCADE
    )
  - CREATE TABLE IF NOT EXISTS cron_jobs (
    `id` INT AUTO_INCREMENT PRIMARY KEY,
    `name` VARCHAR(255) NOT NULL,
    `last_run` INT DEFAULT NULL,
    `next_run` INT DEFAULT NULL,
    `is_active` INT DEFAULT TRUE,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    )
  - CREATE TABLE IF NOT EXISTS simp_cron_logs (
    `id` INT AUTO_INCREMENT PRIMARY KEY,
    `name` VARCHAR(255) NOT NULL,
    `execute_time` INT DEFAULT NULL,
    `start_time` INT DEFAULT NULL,
    `end_time` INT DEFAULT NULL,
    `status` INT DEFAULT NULL,
    `message` VARCHAR(355) NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    )
  - CREATE TABLE IF NOT EXISTS term_data (
    `id` INT AUTO_INCREMENT PRIMARY KEY,
    `vid` VARCHAR(255) NOT NULL,
    `name` VARCHAR(255) NOT NULL,
    `label` VARCHAR(255) NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    )


